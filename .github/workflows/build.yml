name: SonarQube
on:
  push:
    branches:
      - master # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - 
        name: create .sonar folder
        run:  mkdir $HOME/.sonar

      # - 
      #   name: Download and install the build wrapper, build the project
      #   run: |
      #     curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${SONAR_HOST_URL}/static/cpp/build-wrapper-linux-x86.zip
      #     unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
      #     $HOME/.sonar/build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output ./build.sh
      #   env:
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # - 
      #   name: Verify build wrapper output
      #   run: |
      #     ls -lh bw-output
      #     cat bw-output/build-wrapper-dump.json
      #     cat bw-output/build-wrapper.log

      - 
        name: Download and install the SonarScanner, scan the project
        run: |
          curl -sSLo $HOME/.sonar/sonar-scanner-cli-4.6.2.2472-linux.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip -o $HOME/.sonar/sonar-scanner-cli-4.6.2.2472-linux.zip -d $HOME/.sonar/
          echo "sonar.host.url=${SONAR_HOST_URL}" >> $HOME/.sonar/sonar-scanner-4.6.2.2472-linux/conf/sonar-scanner.properties
          $HOME/.sonar/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner -h
          sonar-scanner -Dsonar.login=${SONAR_TOKEN}
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
